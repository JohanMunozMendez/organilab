# Generated by Django 4.1.13 on 2024-02-23 20:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import laboratory.catalog
import laboratory.models_utils


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth_and_perms', '0012_alter_profile_options'),
        ('laboratory', '0134_alter_inform_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='ShelfObjectTraining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('training_initial_date', models.DateField(verbose_name='Initial date')),
                ('training_final_date', models.DateField(verbose_name='Final date')),
                ('number_of_hours', models.IntegerField(verbose_name='Number of hours')),
                ('external_people_receive_training', models.TextField(blank=True, null=True, verbose_name='External people receive training')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observation')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('intern_people_receive_training', models.ManyToManyField(to='auth_and_perms.profile', verbose_name='Intern people receive training')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='laboratory.organizationstructure')),
                ('shelfobject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laboratory.shelfobject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShelfObjectMaintenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('maintenance_date', models.DateField(verbose_name='Maintenance date')),
                ('maintenance_observation', models.DateField(blank=True, null=True, verbose_name='Observation')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='laboratory.organizationstructure')),
                ('provider_of_maintenance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='laboratory.provider', verbose_name='Provider of Maintenance')),
                ('shelfobject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laboratory.shelfobject')),
                ('validator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth_and_perms.profile', verbose_name='Validator')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShelfObjectLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(verbose_name='Description')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='laboratory.organizationstructure')),
                ('shelfobject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laboratory.shelfobject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShelfObjectGuarantee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('guarantee_initial_date', models.DateField(verbose_name='Initial date')),
                ('guarantee_final_date', models.DateField(verbose_name='Final date')),
                ('contract', models.FileField(blank=True, null=True, upload_to=laboratory.models_utils.upload_files, verbose_name='Contract')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='laboratory.organizationstructure')),
                ('shelfobject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laboratory.shelfobject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShelfObjectEquipmentCharacteristics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('equipment_price', models.FloatField(blank=True, null=True, verbose_name='Equipment price')),
                ('purchase_equipment_date', models.DateField(blank=True, null=True, verbose_name='Purchase equipment date')),
                ('delivery_equipment_date', models.DateField(blank=True, null=True, verbose_name='Delivery equipment date')),
                ('have_guarantee', models.BooleanField(default=False, verbose_name='Have guarantee?')),
                ('contract_of_maintenance', models.FileField(upload_to=laboratory.models_utils.upload_files, verbose_name='Contract of maintenance')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('available_to_use', models.BooleanField(default=False, verbose_name='Available to use?')),
                ('first_date_use', models.DateField(blank=True, null=True, verbose_name='First date use')),
                ('authorized_roles_to_use_equipment', models.ManyToManyField(to='auth_and_perms.rol', verbose_name='Authorized roles to use equipment')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='laboratory.organizationstructure')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='laboratory.provider', verbose_name='Provider')),
                ('shelfobject', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='laboratory.shelfobject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShelfObjectCalibrate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observation')),
                ('calibrate_name', models.CharField(blank=True, max_length=40, verbose_name='Name of Calibrator')),
                ('calibration_date', models.DateField(verbose_name='Calibration date')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='laboratory.organizationstructure')),
                ('shelfobject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laboratory.shelfobject')),
                ('validator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth_and_perms.profile', verbose_name='Validator')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentCharacteristics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('use_manual', models.FileField(blank=True, null=True, upload_to=laboratory.models_utils.upload_files, verbose_name='Use manual')),
                ('calibration_required', models.BooleanField(default=False, verbose_name='Is calibration required?')),
                ('operation_voltage', models.CharField(blank=True, max_length=40, null=True, verbose_name='Operation voltage')),
                ('operation_amperage', models.CharField(blank=True, max_length=40, null=True, verbose_name='Operation amperage')),
                ('use_specials_conditions', models.TextField(blank=True, null=True, verbose_name='Use specials conditions')),
                ('generate_pathological_waste', models.BooleanField(default=False, verbose_name='Generate pathological waste?')),
                ('clean_period_according_to_provider', models.IntegerField(blank=True, null=True, verbose_name='Clean period according to provider')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('equipment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='laboratory.equipmenttype', verbose_name='Equipment type')),
                ('instrumental_family', laboratory.catalog.GTForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='laboratory.catalog', verbose_name='Instrumental family')),
                ('object', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='laboratory.object')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='laboratory.organizationstructure')),
                ('providers', models.ManyToManyField(to='laboratory.provider', verbose_name='Providers')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
